<?php

namespace App\Controllers;

use App\Helpers\ClientNotification;
use CodeIgniter\HTTP\RequestInterface;
use CodeIgniter\HTTP\ResponseInterface;
use Config\Database;
use Psr\Log\LoggerInterface;

class FacultyController extends BaseController
{
    /**
     * @var $_clientNotification ClientNotification
     */
    private $_clientNotification;
    public function initController(RequestInterface $request, ResponseInterface $response, LoggerInterface $logger)
    {
        parent::initController($request, $response, $logger); // TODO: Change the autogenerated stub
        $this->_clientNotification = new ClientNotification();

    }

    public function index() {
        try {
            $db = Database::connect();
            $query = $db->query("select * from faculty");
            $list = $query->getResultArray();
            return View('faculty/index', ['faculties' => $list]);
        }
        catch (\Exception $e){
            var_dump($e);
            $this->_clientNotification->addErrorMessage($e->getMessage());
            return redirect()->to('/');
        }
    }

    public function new(){
        try {
            if(!$this->request->is('post')) return View('faculty/new');
            $data = $this->request->getPost();
            $db = Database::connect();
            $db->table('faculty')->insert($data);
            $this->_clientNotification->addSuccessMessage("Faculty added successfully");
            return redirect()->to('/faculty');
        }
        catch (\Exception $e){
            $this->_clientNotification->addErrorMessage($e->getMessage());
            return redirect()->to('/');
        }
    }

    public function edit(){
        try {
            $db = Database::connect();
            $id = $this->request->getGet('id');
            if(!$id) throw new \Exception("Id not provided for edit");
            $faculty = $db->query("Select * from faculty where id=".$id)->getRowObject();
            if(!$this->request->is('post')) return View('faculty/edit', ['faculty' => $faculty]);
            $data = $this->request->getPost();
            $db->table('faculty')->where('id', $id)->update($data);
            $this->_clientNotification->addSuccessMessage("Faculty updated successfully");
            return redirect()->to('/faculty');
        }
        catch (\Exception $e){
            var_dump($e);
            $this->_clientNotification->addErrorMessage($e->getMessage());
            return redirect()->to('/');
        }
    }

    public function delete(){
        try {
            $db = Database::connect();
            $id = $this->request->getGet('id');
            if(!$id) throw new \Exception("Id not provided for delete");
            $faculty = $db->query("Select * from faculty where id=".$id)->getRowObject();
            if(!$faculty) throw new \Exception("Invalid id provided for delete");
            $db->table('faculty')->where('id', $id)->delete();
            $this->_clientNotification->addSuccessMessage("Faculty deleted successfully");
            return redirect()->to('/faculty');
        }
        catch (\Exception $e){
            var_dump($e);
            $this->_clientNotification->addErrorMessage($e->getMessage());
            return redirect()->to('/');
        }
    }

}